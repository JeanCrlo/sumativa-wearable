// Generated by view binder compiler. Do not edit!
package com.example.dhlwear.wear.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.wear.widget.BoxInsetLayout;
import androidx.wear.widget.CircularProgressLayout;
import com.example.dhlwear.wear.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final BoxInsetLayout rootView;

  @NonNull
  public final TextView actionDescription;

  @NonNull
  public final View backgroundCircle;

  @NonNull
  public final CircularProgressLayout circularProgressLayout;

  @NonNull
  public final TextView connectionStatusTextView;

  @NonNull
  public final TextView gestureInstructionTextView;

  @NonNull
  public final ImageView logoImageView;

  @NonNull
  public final EditText messageInput;

  @NonNull
  public final TextView messageSectionTitle;

  @NonNull
  public final TextView messagesListView;

  @NonNull
  public final LinearLayout messagingSection;

  @NonNull
  public final ImageView scrollDownIndicator;

  @NonNull
  public final NestedScrollView scrollView;

  @NonNull
  public final Button sendMessageButton;

  @NonNull
  public final CardView statusCardView;

  @NonNull
  public final TextView statusTextView;

  @NonNull
  public final TextView titleTextView;

  @NonNull
  public final Button updateStatusButton;

  private ActivityMainBinding(@NonNull BoxInsetLayout rootView, @NonNull TextView actionDescription,
      @NonNull View backgroundCircle, @NonNull CircularProgressLayout circularProgressLayout,
      @NonNull TextView connectionStatusTextView, @NonNull TextView gestureInstructionTextView,
      @NonNull ImageView logoImageView, @NonNull EditText messageInput,
      @NonNull TextView messageSectionTitle, @NonNull TextView messagesListView,
      @NonNull LinearLayout messagingSection, @NonNull ImageView scrollDownIndicator,
      @NonNull NestedScrollView scrollView, @NonNull Button sendMessageButton,
      @NonNull CardView statusCardView, @NonNull TextView statusTextView,
      @NonNull TextView titleTextView, @NonNull Button updateStatusButton) {
    this.rootView = rootView;
    this.actionDescription = actionDescription;
    this.backgroundCircle = backgroundCircle;
    this.circularProgressLayout = circularProgressLayout;
    this.connectionStatusTextView = connectionStatusTextView;
    this.gestureInstructionTextView = gestureInstructionTextView;
    this.logoImageView = logoImageView;
    this.messageInput = messageInput;
    this.messageSectionTitle = messageSectionTitle;
    this.messagesListView = messagesListView;
    this.messagingSection = messagingSection;
    this.scrollDownIndicator = scrollDownIndicator;
    this.scrollView = scrollView;
    this.sendMessageButton = sendMessageButton;
    this.statusCardView = statusCardView;
    this.statusTextView = statusTextView;
    this.titleTextView = titleTextView;
    this.updateStatusButton = updateStatusButton;
  }

  @Override
  @NonNull
  public BoxInsetLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actionDescription;
      TextView actionDescription = ViewBindings.findChildViewById(rootView, id);
      if (actionDescription == null) {
        break missingId;
      }

      id = R.id.backgroundCircle;
      View backgroundCircle = ViewBindings.findChildViewById(rootView, id);
      if (backgroundCircle == null) {
        break missingId;
      }

      id = R.id.circularProgressLayout;
      CircularProgressLayout circularProgressLayout = ViewBindings.findChildViewById(rootView, id);
      if (circularProgressLayout == null) {
        break missingId;
      }

      id = R.id.connectionStatusTextView;
      TextView connectionStatusTextView = ViewBindings.findChildViewById(rootView, id);
      if (connectionStatusTextView == null) {
        break missingId;
      }

      id = R.id.gestureInstructionTextView;
      TextView gestureInstructionTextView = ViewBindings.findChildViewById(rootView, id);
      if (gestureInstructionTextView == null) {
        break missingId;
      }

      id = R.id.logoImageView;
      ImageView logoImageView = ViewBindings.findChildViewById(rootView, id);
      if (logoImageView == null) {
        break missingId;
      }

      id = R.id.messageInput;
      EditText messageInput = ViewBindings.findChildViewById(rootView, id);
      if (messageInput == null) {
        break missingId;
      }

      id = R.id.messageSectionTitle;
      TextView messageSectionTitle = ViewBindings.findChildViewById(rootView, id);
      if (messageSectionTitle == null) {
        break missingId;
      }

      id = R.id.messagesListView;
      TextView messagesListView = ViewBindings.findChildViewById(rootView, id);
      if (messagesListView == null) {
        break missingId;
      }

      id = R.id.messagingSection;
      LinearLayout messagingSection = ViewBindings.findChildViewById(rootView, id);
      if (messagingSection == null) {
        break missingId;
      }

      id = R.id.scrollDownIndicator;
      ImageView scrollDownIndicator = ViewBindings.findChildViewById(rootView, id);
      if (scrollDownIndicator == null) {
        break missingId;
      }

      id = R.id.scrollView;
      NestedScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.sendMessageButton;
      Button sendMessageButton = ViewBindings.findChildViewById(rootView, id);
      if (sendMessageButton == null) {
        break missingId;
      }

      id = R.id.statusCardView;
      CardView statusCardView = ViewBindings.findChildViewById(rootView, id);
      if (statusCardView == null) {
        break missingId;
      }

      id = R.id.statusTextView;
      TextView statusTextView = ViewBindings.findChildViewById(rootView, id);
      if (statusTextView == null) {
        break missingId;
      }

      id = R.id.titleTextView;
      TextView titleTextView = ViewBindings.findChildViewById(rootView, id);
      if (titleTextView == null) {
        break missingId;
      }

      id = R.id.updateStatusButton;
      Button updateStatusButton = ViewBindings.findChildViewById(rootView, id);
      if (updateStatusButton == null) {
        break missingId;
      }

      return new ActivityMainBinding((BoxInsetLayout) rootView, actionDescription, backgroundCircle,
          circularProgressLayout, connectionStatusTextView, gestureInstructionTextView,
          logoImageView, messageInput, messageSectionTitle, messagesListView, messagingSection,
          scrollDownIndicator, scrollView, sendMessageButton, statusCardView, statusTextView,
          titleTextView, updateStatusButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
