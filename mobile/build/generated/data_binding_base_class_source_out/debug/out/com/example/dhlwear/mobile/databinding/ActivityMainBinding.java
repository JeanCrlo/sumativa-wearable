// Generated by view binder compiler. Do not edit!
package com.example.dhlwear.mobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.ProgressBar;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dhlwear.mobile.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final LinearLayout buttonsContainer;

  @NonNull
  public final Button confirmReceiptButton;

  @NonNull
  public final Button connectButton;

  @NonNull
  public final TextView connectionStatusTextView;

  @NonNull
  public final TextView courierTextView;

  @NonNull
  public final LinearLayout deliveryStatusContainer;

  @NonNull
  public final TextView destinationTextView;

  @NonNull
  public final TextView emptyMessagesView;

  @NonNull
  public final TextView lastUpdateTextView;

  @NonNull
  public final ImageView logoImageView;

  @NonNull
  public final EditText messageInput;

  @NonNull
  public final ListView messagesListView;

  @NonNull
  public final CardView messagingCardView;

  @NonNull
  public final LinearLayout messagingSection;

  @NonNull
  public final TextView originTextView;

  @NonNull
  public final CardView packageDetailsCardView;

  @NonNull
  public final TextView packageIdTextView;

  @NonNull
  public final ProgressBar progressIndicator;

  @NonNull
  public final RatingBar ratingBar;

  @NonNull
  public final LinearLayout ratingContainer;

  @NonNull
  public final Button sendMessageButton;

  @NonNull
  public final CardView statusCardView;

  @NonNull
  public final TextView statusTextView;

  @NonNull
  public final Button submitRatingButton;

  @NonNull
  public final TextView titleTextView;

  @NonNull
  public final Button updateStatusButton;

  @NonNull
  public final ImageView watchConnectionStatus;

  private ActivityMainBinding(@NonNull NestedScrollView rootView,
      @NonNull LinearLayout buttonsContainer, @NonNull Button confirmReceiptButton,
      @NonNull Button connectButton, @NonNull TextView connectionStatusTextView,
      @NonNull TextView courierTextView, @NonNull LinearLayout deliveryStatusContainer,
      @NonNull TextView destinationTextView, @NonNull TextView emptyMessagesView,
      @NonNull TextView lastUpdateTextView, @NonNull ImageView logoImageView,
      @NonNull EditText messageInput, @NonNull ListView messagesListView,
      @NonNull CardView messagingCardView, @NonNull LinearLayout messagingSection,
      @NonNull TextView originTextView, @NonNull CardView packageDetailsCardView,
      @NonNull TextView packageIdTextView, @NonNull ProgressBar progressIndicator,
      @NonNull RatingBar ratingBar, @NonNull LinearLayout ratingContainer,
      @NonNull Button sendMessageButton, @NonNull CardView statusCardView,
      @NonNull TextView statusTextView, @NonNull Button submitRatingButton,
      @NonNull TextView titleTextView, @NonNull Button updateStatusButton,
      @NonNull ImageView watchConnectionStatus) {
    this.rootView = rootView;
    this.buttonsContainer = buttonsContainer;
    this.confirmReceiptButton = confirmReceiptButton;
    this.connectButton = connectButton;
    this.connectionStatusTextView = connectionStatusTextView;
    this.courierTextView = courierTextView;
    this.deliveryStatusContainer = deliveryStatusContainer;
    this.destinationTextView = destinationTextView;
    this.emptyMessagesView = emptyMessagesView;
    this.lastUpdateTextView = lastUpdateTextView;
    this.logoImageView = logoImageView;
    this.messageInput = messageInput;
    this.messagesListView = messagesListView;
    this.messagingCardView = messagingCardView;
    this.messagingSection = messagingSection;
    this.originTextView = originTextView;
    this.packageDetailsCardView = packageDetailsCardView;
    this.packageIdTextView = packageIdTextView;
    this.progressIndicator = progressIndicator;
    this.ratingBar = ratingBar;
    this.ratingContainer = ratingContainer;
    this.sendMessageButton = sendMessageButton;
    this.statusCardView = statusCardView;
    this.statusTextView = statusTextView;
    this.submitRatingButton = submitRatingButton;
    this.titleTextView = titleTextView;
    this.updateStatusButton = updateStatusButton;
    this.watchConnectionStatus = watchConnectionStatus;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonsContainer;
      LinearLayout buttonsContainer = ViewBindings.findChildViewById(rootView, id);
      if (buttonsContainer == null) {
        break missingId;
      }

      id = R.id.confirmReceiptButton;
      Button confirmReceiptButton = ViewBindings.findChildViewById(rootView, id);
      if (confirmReceiptButton == null) {
        break missingId;
      }

      id = R.id.connectButton;
      Button connectButton = ViewBindings.findChildViewById(rootView, id);
      if (connectButton == null) {
        break missingId;
      }

      id = R.id.connectionStatusTextView;
      TextView connectionStatusTextView = ViewBindings.findChildViewById(rootView, id);
      if (connectionStatusTextView == null) {
        break missingId;
      }

      id = R.id.courierTextView;
      TextView courierTextView = ViewBindings.findChildViewById(rootView, id);
      if (courierTextView == null) {
        break missingId;
      }

      id = R.id.deliveryStatusContainer;
      LinearLayout deliveryStatusContainer = ViewBindings.findChildViewById(rootView, id);
      if (deliveryStatusContainer == null) {
        break missingId;
      }

      id = R.id.destinationTextView;
      TextView destinationTextView = ViewBindings.findChildViewById(rootView, id);
      if (destinationTextView == null) {
        break missingId;
      }

      id = R.id.emptyMessagesView;
      TextView emptyMessagesView = ViewBindings.findChildViewById(rootView, id);
      if (emptyMessagesView == null) {
        break missingId;
      }

      id = R.id.lastUpdateTextView;
      TextView lastUpdateTextView = ViewBindings.findChildViewById(rootView, id);
      if (lastUpdateTextView == null) {
        break missingId;
      }

      id = R.id.logoImageView;
      ImageView logoImageView = ViewBindings.findChildViewById(rootView, id);
      if (logoImageView == null) {
        break missingId;
      }

      id = R.id.messageInput;
      EditText messageInput = ViewBindings.findChildViewById(rootView, id);
      if (messageInput == null) {
        break missingId;
      }

      id = R.id.messagesListView;
      ListView messagesListView = ViewBindings.findChildViewById(rootView, id);
      if (messagesListView == null) {
        break missingId;
      }

      id = R.id.messagingCardView;
      CardView messagingCardView = ViewBindings.findChildViewById(rootView, id);
      if (messagingCardView == null) {
        break missingId;
      }

      id = R.id.messagingSection;
      LinearLayout messagingSection = ViewBindings.findChildViewById(rootView, id);
      if (messagingSection == null) {
        break missingId;
      }

      id = R.id.originTextView;
      TextView originTextView = ViewBindings.findChildViewById(rootView, id);
      if (originTextView == null) {
        break missingId;
      }

      id = R.id.packageDetailsCardView;
      CardView packageDetailsCardView = ViewBindings.findChildViewById(rootView, id);
      if (packageDetailsCardView == null) {
        break missingId;
      }

      id = R.id.packageIdTextView;
      TextView packageIdTextView = ViewBindings.findChildViewById(rootView, id);
      if (packageIdTextView == null) {
        break missingId;
      }

      id = R.id.progressIndicator;
      ProgressBar progressIndicator = ViewBindings.findChildViewById(rootView, id);
      if (progressIndicator == null) {
        break missingId;
      }

      id = R.id.ratingBar;
      RatingBar ratingBar = ViewBindings.findChildViewById(rootView, id);
      if (ratingBar == null) {
        break missingId;
      }

      id = R.id.ratingContainer;
      LinearLayout ratingContainer = ViewBindings.findChildViewById(rootView, id);
      if (ratingContainer == null) {
        break missingId;
      }

      id = R.id.sendMessageButton;
      Button sendMessageButton = ViewBindings.findChildViewById(rootView, id);
      if (sendMessageButton == null) {
        break missingId;
      }

      id = R.id.statusCardView;
      CardView statusCardView = ViewBindings.findChildViewById(rootView, id);
      if (statusCardView == null) {
        break missingId;
      }

      id = R.id.statusTextView;
      TextView statusTextView = ViewBindings.findChildViewById(rootView, id);
      if (statusTextView == null) {
        break missingId;
      }

      id = R.id.submitRatingButton;
      Button submitRatingButton = ViewBindings.findChildViewById(rootView, id);
      if (submitRatingButton == null) {
        break missingId;
      }

      id = R.id.titleTextView;
      TextView titleTextView = ViewBindings.findChildViewById(rootView, id);
      if (titleTextView == null) {
        break missingId;
      }

      id = R.id.updateStatusButton;
      Button updateStatusButton = ViewBindings.findChildViewById(rootView, id);
      if (updateStatusButton == null) {
        break missingId;
      }

      id = R.id.watchConnectionStatus;
      ImageView watchConnectionStatus = ViewBindings.findChildViewById(rootView, id);
      if (watchConnectionStatus == null) {
        break missingId;
      }

      return new ActivityMainBinding((NestedScrollView) rootView, buttonsContainer,
          confirmReceiptButton, connectButton, connectionStatusTextView, courierTextView,
          deliveryStatusContainer, destinationTextView, emptyMessagesView, lastUpdateTextView,
          logoImageView, messageInput, messagesListView, messagingCardView, messagingSection,
          originTextView, packageDetailsCardView, packageIdTextView, progressIndicator, ratingBar,
          ratingContainer, sendMessageButton, statusCardView, statusTextView, submitRatingButton,
          titleTextView, updateStatusButton, watchConnectionStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
